{"version":3,"sources":["components/btnDelete.js","components/input.js","components/form.jsx","components/table.jsx","App.js","serviceWorker.js","index.js"],"names":["BtnDelete","props","className","onClick","handlerDelete","indexRow","ElementForm","type","name","placeholder","value","defaultValue","options","map","i","key","onChange","handleChange","addOpts","disabled","maxLength","ev","target","length","PersonForm","event","setState","inputsOpts","lastname","firstname","patronymic","card","orgnameshort","idperson","idcard","acc1num","statusname","persontypename","currname","birthdate","docseries","docnum","doctypename","idtaskauthstatus","state","initFields","fields","bind","this","handlerToggleEditing","handlerOk","opts","inputs","forEach","React","Component","Table","useState","stateEditing","setStateEditing","data","grColumnsStyle","gridTemplateColumns","headers","dataArea","item","index","formArea","toLowerCase","style","windows1251ResponseToUTF8Response","response","a","Response","TextDecoder","arrayBuffer","decode","App","stateLoadedData","setStateLoadedData","statePersons","setStatePersons","stateMeta","setStateMeta","fetch","method","then","result","json","metaData","rows","simpleData","paar","transformData","catch","error","console","log","loadData","clonePersons","slice","splice","newPerson","includes","toUpperCase","push","concat","handlerAddPerson","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.16301c7d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function BtnDelete(props) {\r\n    return (\r\n        <div className=\"App-link App-btnDelete\"\r\n             onClick={ () => { props.handlerDelete(props.indexRow)} }>Удалить</div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ElementForm(props) {\r\n    const {type, name, placeholder, value, defaultValue} = props\r\n    let { className }= props\r\n\r\n    switch (type) {\r\n        case 'select':\r\n            const options = props.options.map((value,i) => <option value={value} key={`option-${name}-${i}`}>{value}</option>)\r\n            return(\r\n                <select className={`App-select ${className || ''}`} name={name}\r\n                        defaultValue={defaultValue}\r\n                        onChange={props.handleChange}\r\n                >\r\n                    { options }\r\n                </select>\r\n            );\r\n        // case 'checkbox': return;\r\n        default:\r\n            const addOpts = { placeholder: placeholder || name }\r\n\r\n            if (defaultValue === '') { addOpts.defaultValue = defaultValue }\r\n            if ('disabled' in props && props.disabled) { addOpts.disabled = true }\r\n            if (props['maxLength']) { addOpts.maxLength = props['maxLength'] }\r\n\r\n            return (\r\n                <input type={type || 'text'} className={`App-input ${className || ''}`}\r\n                       name={name}\r\n                       onChange={(ev) => {\r\n                           if (props['maxLength'] ) {\r\n                               if (ev.target.value.length <= props['maxLength']) {\r\n                               props.handleChange(ev) }\r\n                           } else {\r\n                               props.handleChange(ev)\r\n                           }\r\n                       }}\r\n                       value={value}\r\n                       { ... addOpts }\r\n                />\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ElementForm from \"./input\";\r\n\r\nexport default class PersonForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.inputsOpts = {\r\n            // cardtemplname\r\n            lastname: {type: 'text', placeholder: 'Фамилия'},\r\n            firstname: {type: 'text', placeholder: 'Имя'},\r\n            patronymic: {type: 'text', placeholder: 'Отчество'},\r\n            card: {type: 'text', className: 'App-input--middle'},\r\n            orgnameshort: {type: 'text', className: 'App-input--middle', placeholder: 'Организация', defaultValue: 'Рога и Копыта'},\r\n            idperson: {type: 'number', defaultValue: '102', className: 'App-input--short', placeholder: 'id', disabled: true},\r\n            idcard: {type: 'number', maxLength: 5, className: 'App-input--short' },\r\n            acc1num: {type: 'number', maxLength: 20},\r\n            statusname: {type: 'select', defaultValue: 'Новый', options: ['Новый', 'Действующий']},\r\n            persontypename: {type: 'select', defaultValue: 'Физ. лицо', options: ['Физ. лицо', 'Юр. лицо', 'ИП']},\r\n            currname: {type: 'text', defaultValue: 'RUR', className: 'App-input--short', },\r\n            birthdate: {type: 'date'},\r\n            docseries: {type: 'number', maxLength: 4, className: 'App-input--short' },\r\n            docnum: {type: 'number', maxLength: 6, className: 'App-input--middle' },\r\n            doctypename: {type: 'select', defaultValue: 'Паспорт РФ', options: ['Паспорт РФ']},\r\n            idtaskauthstatus: {type: 'number', defaultValue: '10', className: 'App-input--short'},\r\n        }\r\n        this.state = this.initFields(props.fields)\r\n        this.initFields = this.initFields.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render(){\r\n        const fields = this.props.fields.map( name => {\r\n            return (<div className=\"App-personForm-item grid-item\" key={`${name}Wrapper`}>\r\n                <ElementForm {...this.inputsOpts[name]}\r\n                             name={name}\r\n                             handleChange={this.handleChange}\r\n                             value={this.state[name]}\r\n                />\r\n            </div>)\r\n        })\r\n\r\n        return (\r\n            <>\r\n                <div className=\"App-overflow\"></div>\r\n\r\n                { fields }\r\n\r\n                <div className=\"App-personForm-item grid-item App-btnWrapper\">\r\n                    <button className=\"App-btnOk\" onClick={() => {\r\n                        this.props.handlerToggleEditing()\r\n                        this.props.handlerOk(this.state)\r\n                    }}>Ok</button>\r\n                    <div className=\"App-link App-btnCancel\" onClick={ this.props.handlerToggleEditing }>Отмена</div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    initFields(fields) {\r\n        const opts = this.inputsOpts\r\n        const inputs = {}\r\n        fields.forEach(name => {\r\n            inputs[name] = (name in opts && 'defaultValue' in opts[name]) ? opts[name].defaultValue : ''\r\n        })\r\n        return inputs\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport BtnDelete from \"./btnDelete\";\r\nimport PersonForm from \"./form\";\r\n\r\nexport default function Table(props) {\r\n    const [stateEditing, setStateEditing] = useState(false)\r\n\r\n    if (props.data) {\r\n        const grColumnsStyle = {gridTemplateColumns: `120px repeat(3, 1fr) repeat(${props.headers.length - 4}, auto) auto`}\r\n\r\n        const dataArea = props.data.map( (item, indexRow) => {\r\n            return (\r\n                <div className=\"App-rowWrapper\" key={`${indexRow}-row`}>\r\n                    { props.headers.map( (name, index) => {\r\n                        return <div className={ `grid-item ${(name === 'CARD' || name === 'ACC1NUM')  ? 'App-ellipsis': ''}` }\r\n                                    key={`${index}-cell`}>\r\n                            { item[index][name] }\r\n                        </div>\r\n                    }) }\r\n                    <div className=\"grid-item App-btnWrapper\">\r\n                        <BtnDelete handlerDelete={ props.handlerDelete }\r\n                                   indexRow={ indexRow } />\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const formArea = stateEditing ? <div className=\"App-rowWrapper\">\r\n            <PersonForm fields={ props.headers.map( name => name.toLowerCase()) }\r\n                        handlerToggleEditing={ () => { setStateEditing(false) }}\r\n                        handlerOk={ props.handlerOk }\r\n            />\r\n        </div> : null\r\n\r\n        return (\r\n            <>\r\n            <div className=\"App-table\">\r\n                <div className=\"grid-container\" style={ grColumnsStyle }>\r\n                    { dataArea }\r\n\r\n                    { formArea }\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"App-link App-text--center\" onClick={ () => { setStateEditing(true) }}>Добавить персону</p>\r\n            </>\r\n        )\r\n    } else return (\r\n        <div className=\"App-loader App-text--center\">Загрузка..</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport Table from \"./components/table\";\n\nfunction App() {\n\n  const [stateLoadedData, setStateLoadedData] = useState(false)\n  const [statePersons, setStatePersons] = useState(null)\n  const [stateMeta, setStateMeta] = useState(null)\n\n  if ( !stateLoadedData ) {\n      setStateLoadedData(true)\n      loadData(setStatePersons, setStateMeta)\n  }\n\n  return (\n    <div className=\"App\">\n      <Table handlerDelete={ (indexRow) => { handlerDelete(indexRow, statePersons, setStatePersons) }}\n             handlerOk={ (data) => { handlerAddPerson(data, statePersons, setStatePersons) }}\n             data={statePersons}\n             headers={stateMeta}/>\n    </div>\n  );\n}\n\nfunction transformData(data) {\n    return data.rows.map( simpleData => {\n        return simpleData.map( (value, index) => {\n            const paar = {}\n            paar[data.metaData[index].name] = value\n            return paar\n        })\n    })\n}\nasync function windows1251ResponseToUTF8Response(response) {\n    return new Response(new TextDecoder(\"windows-1251\").decode(await response.arrayBuffer()));\n}\n\nfunction loadData(setStatePersons, setStateMeta){\n  fetch('/justtable/public/person.json', {\n    method: 'GET',\n    headers: {'Content-Type': 'application/json;charset=utf-8'}\n  }).then( windows1251ResponseToUTF8Response )\n      .then( result => result.json() )\n      .then( data => {\n        setStateMeta(data.data.metaData.map(key => key.name))\n        setStatePersons(transformData(data.data))\n      })\n      .catch(error => {\n          console.log(error)\n      })\n}\n\nfunction handlerDelete(indexRow, statePersons, setStatePersons) {\n    const clonePersons = statePersons.slice(0)\n    clonePersons.splice(indexRow, 1)\n    setStatePersons( clonePersons )\n}\n\nfunction handlerAddPerson(data, statePersons, setStatePersons) {\n    const newPerson = []\n    for (let name in data) {\n        let value = data[name]\n        if (['lastname', 'firstname', 'patronymic'].includes(name)) {\n            value = value.toUpperCase()\n        }\n        newPerson.push({ [name.toUpperCase() ]: value })\n    }\n    setStatePersons( statePersons.concat([ newPerson ]))\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
